#+title: AsignaciÃ³n de memoria
#+author: Gunnar Wolf

- Edgar Guadarrama ::
  - CÃ³digo :: [[./GuadarramaEdgar/tarea2.c][tarea2.c]]
  - Lenguaje :: C
  - Comentarios ::
    - Â¡Muy bien resuelto!
    - RecomendaciÃ³n: EstÃ¡s utilizando los comentarios como
      micro-documentaciÃ³n de uso. Si bien es vÃ¡lido en una tarea, te
      crea malas prÃ¡cticas a futuro. Los comentarios deben ser
      informaciÃ³n Ãºtil /al programador/ que se acerque a tu cÃ³digo. La
      documentaciÃ³n (como tus lÃ­neas 117 y 121) deberÃ­a ser un archivo
      aparte, orientado a tus /usuarios/.
  - CalificaciÃ³n :: 10

- AnÃ­bal Medina y Guadalupe Moreno ::
  - CÃ³digo :: [[./MorenoGuadalupe-MedinaAnibal/Asignador.java][Asignador.java]]
  - Lenguaje :: Java
  - Comentarios ::
    - Â¡Buena implementaciÃ³n! (Â¿ven cÃ³mo sÃ­ soy capaz de decir eso de
      un programa en Java? â˜º)
    - CÃ³modo y Ãºtil que los procesos que se vayan asignando vayan
      tomando letras y tamaÃ±os aleatorios. Sin embargo, dado que no
      reporta el tamaÃ±o del proceso que intentarÃ­a asignar, tuve que
      "picarle" varias veces para convencerme de que no implementa
      compactaciÃ³n. Vamos:
      #+BEGIN_SRC text
      Entra proceso (W) de tamaÃ±o 10
      CCCHHHIIIIIIIIIIIIIWWWWWWWWWW-

      s
      Se eliminÃ³ al proceso H
      CCC---IIIIIIIIIIIIIWWWWWWWWWW-

      a
      No hay espacio suficiente para el proceso D
      CCC---IIIIIIIIIIIIIWWWWWWWWWW-

      a
      Entra proceso (X) de tamaÃ±o 2
      CCCXX-IIIIIIIIIIIIIWWWWWWWWWW-
      #+END_SRC
    - Y, sÃ­... Les faltÃ³ implementar la compactaciÃ³n.
  - CalificaciÃ³n :: 9

- Miguel PÃ©rez ::
  - CÃ³digo :: [[./PerezMiguel/Memoria.java][Memoria.java]], [[./PerezMiguel/TestMemoria.java][TestMemoria.java]]
  - Lenguaje :: Java
  - Comentarios ::
    - Â¡Bien! Asigna, libera, compacta, reporta errores... Â¿QuÃ© mÃ¡s
      puedo pedir? â˜º
    - Tu cÃ³digo no compila tal como lo mandaste:
      #+BEGIN_SRC text
	$ javac TestMemoria.java 
	./Memoria.java:140: error: cannot find symbol
			if(Tabla.asigna(nombre, tamanio) == 1)
			   ^
	  symbol:   variable Tabla
	  location: class Memoria
	1 error
      #+END_SRC
      Basta con quitar =Tabla.= para que funcione. Â¿QuÃ© pasÃ³ ahÃ­? :-]
  - CalificaciÃ³n :: 10

- SimÃ³n RamÃ­rez y Cristian Valeriano ::
  - CÃ³digo :: [[./RamirezSimon-ValerianoCristian/asigMem.rb][asigMem.rb]]
  - Lenguaje :: ruby
  - Comentarios ::
    - Tienen varios errores de uso de mÃ©todos errÃ³neos
      (=String#include= no existe para =cadena.include(cad_aux)=
      repetidamente)
    - =String#succ= entrega una cadena nueva, no modifica a la
      existente (hay que re-asignar a procesos)
    - Hay varios puntos en que la =cadena= no es pasada a la funciÃ³n,
      por lo que el programa no llega a funcionar. Lo evalÃºo
      Ãºnicamente basado en el fuente.
    - La lÃ³gica de =asignaProceso()= suena correcta, y me gusta el uso
      que hacen del lenguaje. La lÃ³gica de =liberaProceso()= llevarÃ­a
      efectivamente a una compactaciÃ³n siempre que termine un proceso
      - PodrÃ­as usar =String.gsub!()=:
	#+BEGIN_SRC text
	  >> v='AAAA--BBBBCCDDDD'.ljust(30,'-')
	  => "AAAA--BBBBCCDDDD--------------"
	  >> v.gsub!('C', '-')
	  => "AAAA--BBBB--DDDD--------------"
	  >> v.gsub!('B', '-')
	  => "AAAA--------DDDD--------------"
	#+END_SRC
  - CalificaciÃ³n :: 8

- Miguel Aguilar ::
  - CÃ³digo :: [[./AguilarMiguel/asignador.c][asignador.c]]
  - Lenguaje :: C
  - Comentarios ::
    - Tu programa depende de un archivo que indique cÃ³mo
      asignar/emplear la memoria. Este archivo debe seguir un formato
      en especÃ­fico. Â¡Pero no incluyes documentaciÃ³n! Tuve que generar
      el archivo bÃ¡sicamente por /ingenierÃ­a inversa/ â€” Viendo lo que
      tu programa /busca hacer/ con Ã©l.
    - Tu programa en general es /muy bueno/ â€” Con un par de
      anotaciones importantes, sÃ­, pero la forma en que lo resolviste
      es muy buena.
      - En primer lugar, solicitÃ© /asignaciÃ³n contigua/. Tu programa
        asigna espacio en memoria incluso si no puede satisfacerse. Al
        detectar que la memoria no puede asignarse de forma contigua,
        deberÃ­as forzar una /compactaciÃ³n/
      - En segundo lugar, tu funciÃ³n =asigMemoria()= no contempla el
        caso de que no haya memoria suficiente para satisfacer la
        solicitud. Si bien verificas y podrÃ­as imprimir =No se pudo
        asignar= (lÃ­nea 110), nunca llegas ahÃ­. Por ejemplo, indicando
        las siguientes solicitudes, tu programa se queda en un ciclo
        eterno, nomÃ¡s quemando CPU:
	#+BEGIN_SRC text
	1 14
	2 3
	#+END_SRC
  - CalificaciÃ³n :: 0 (entrega mÃ¡s de una semana despuÃ©s de la fecha lÃ­mite)

- Karla GuzmÃ¡n ::
  - CÃ³digo :: [[./GuzmÃ¡nKarla/asigmem.py][asigmem.py]]
  - Lenguaje :: Python
  - Comentarios ::
    - Buena implementaciÃ³n, aunque con un par de detalles
    - Al intentar quitar un proceso, Python manda un error:
      #+BEGIN_SRC text
	1 => Agregar proceso
	2 => Quitar proceso
	0 => Salir
	$$ 2
	ingresa el nombre del proceso: Z
	Traceback (most recent call last):
	  File "asigmem.py", line 110, in <module>
	    control()
	  File "asigmem.py", line 108, in control
	    opcion(numero)
	  File "asigmem.py", line 94, in opcion
	    vacia_memoria(proceso, tamano)
	  File "asigmem.py", line 31, in vacia_memoria
	    while contador1 > 0:
	UnboundLocalError: local variable 'contador1' referenced before assignment
      #+END_SRC
      Esto es porque estÃ¡s asignando (lÃ­nea 30) un valor a la variable
      =contador=, pero en la siguiente lÃ­nea la utilizas como
      =contador1=. Corrigiendo el nombre de la variable, el programa
      funciona bien.
    - Tu programa detecta correctamente la compactaciÃ³n de memoria,
      /pero no la efectÃºa/, y realiza asignaciÃ³n de memoria no
      contigua:
      #+BEGIN_SRC text
	1 => Agregar proceso
	2 => Quitar proceso
	0 => Salir
	$$ 1
	ingresa el nombre del proceso: G
	ingresa el tamaÃ±o de tu proceso: 6
	se requiere compactar la memoria

	Mapa de memoria 

	|A| |A| |A| |A| |A| |A| |A| |A| |A| |A| 

	|A| |A| |A| |A| |A| |G| |G| |G| |B| |B| 

	|B| |R| |R| |R| |R| |G| |G| |G| |*| |*| 
      #+END_SRC
  - CalificaciÃ³n :: 0 (entrega mÃ¡s de una semana despuÃ©s de la fecha lÃ­mite)

- Andrew SÃ¡nchez ::
  - CÃ³digo :: [[./SanchezAndrew/Tarea2.py][Tarea2.py]]
  - DocumentaciÃ³n :: [[./SanchezAndrew/Documentacion.txt][Documentacion.txt]]
  - Lenguaje :: Python
  - Comentarios ::
    - El programa es bÃ¡sicamente el mismo que el entregado por Karla
      GuzmÃ¡n, los comentarios a aquel valen para este
    - No hay problema, el problema estaba planteado para resolverse
      /de forma individual o en equipos de 2 personas/ ðŸ˜‰
      - AdemÃ¡s... De todos modos, no alcanzaron calificaciÃ³n â˜¹
  - CalificaciÃ³n :: 0 (entrega mÃ¡s de una semana despuÃ©s de la fecha lÃ­mite)

- Luis Chibras ::
  - CÃ³digo :: [[./ChibrasLuis/tarea2.py][tarea2.py]]
  - Lenguaje :: Python
  - Comentarios ::
    - El programa tiene varios errores de implementaciÃ³n, no logrÃ©
      correrlo ejecutarlo exitosamente
      - En =menu()=, el valor recibido en =opcion= no es una cadena
        (siempre da falso cuando lo comparas con ='0'= o ='1'=). Ya
        sea que lo conviertes en una o que comparas con el entero
        correspondiente.
      - La lÃ³gica de =Borrar()= me parece correcta a grandes rasgos,
        pero falla al intentar evluar al nombre del proceso solicitado
        (=NameError: name 'A' is not defined=).
      - Me parece que tu fallo al iniciar se presenta cuando generas
        una cadena que no puede satisfacerse (p.ej. se excede el
        tamaÃ±o de la memoria(?): Tu =while= busca la condiciÃ³n =ar
        !=0=, pero cuando asignas espacio, disminuyes =ar= dos veces
        (y puede pasar de =1= a =-1=).

  - CalificaciÃ³n :: 0 (entrega mÃ¡s de una semana despuÃ©s de la fecha lÃ­mite)

- Alejandro PÃ©rez ::
  - CÃ³digo :: [[./PerezAlejandro/mem.py][mem.py]]
  - DocumentaciÃ³n :: [[./PerezAlejandro/doc.pdf][doc.pdf]]
  - Lenguaje :: Python
  - Comentarios ::
    - No detecta ni realiza compactaciÃ³n, "rompe" un proceso en
      secciones si no hay un espacio contiguo adecuado:
      #+BEGIN_SRC text
	1. Agregar proceso
	2. Quitar proceso
	0. Salir
	>> 1
	Ingresa el nombre del proceso: T
	Ingresa el tamaÃ±o del proceso: 6
	Se requiere compactaciÃ³n de memoria
	sh: 1: cls: not found

	â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ MEMORY MAP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

	 F   F   F   F   E   E   E   T   T   T  

	 T   T   R   R   R   R   R   R   T   -  

	 -   L   L   L   L   L   L   L   L  
      #+END_SRC

  - CalificaciÃ³n :: 8 Ã— 0.8 = 6.4 (subido a Git a tiempo, pero
                    entregado mucho despuÃ©s)
